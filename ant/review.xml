<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by PHP Project Wizard (PPW) 1.0.4 on Tue Jan 17 15:04:25 CET 2012 -->

<project name="review" basedir=".">
    <property name="source" value="src" />

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/code-browser" />
        <delete dir="${basedir}/build/coverage" />
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/pdepend" />
        <delete dir="${basedir}/build/phrocco" />
        <delete dir="${basedir}/build/src" />

        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/code-browser" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />
        <mkdir dir="${basedir}/build/phrocco" />
        <mkdir dir="${basedir}/build/src" />
    </target>

    <target name="review" description="Runs code quality checks on commited files." depends="setprofile,review.lint,review.phpmd,review.phpcpd,review.phpcs,review.phrocco">
        <antcall target="review.browse" />
    </target>

    <target name="review.files.discover" unless="files" depends="setprofile">
        <exec executable="sh" outputproperty="files">
            <arg value="-c" />
            <arg value="${AramisBuildToolkit.basedir}/bin/git-needsreview -b ${review.branch} -f ${review.filter} | xargs | sed 's/ /,/g'" />
        </exec>
    </target>

    <target name="review.files" depends="setprofile, review.files.discover" description="Finds which files must be reviewed">
        <copy todir="${basedir}/build/src">
            <fileset dir="${basedir}" includes="${files}" excludes="${review.exclude}" />
        </copy>
    </target>

    <target name="review.lint" description="Searches code for syntax errors" depends="clean, review.files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${basedir}/build/src" />
        </apply>
    </target>

    <target name="review.phpmd" description="Runs PHPMD on files that needs review" depends="clean, review.files">
        <exec executable="phpmd">
            <arg line="${basedir}/build/src
                    xml
                    codesize,design,naming,unusedcode
                    --reportfile ${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="review.phpcpd" description="Runs copy / paste detection on files that needs review" depends="clean, review.files">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml
                    ${basedir}/build/src" />
        </exec>
    </target>

    <target name="review.phpcs" description="Runs Checkstyle on files that needs review" depends="setprofile,clean, review.files">
        <exec executable="phpcs">
            <arg line="--report=checkstyle
                    --report-file=${basedir}/build/logs/checkstyle.xml
                    --standard=${review.phpcs.standard}
                    ${basedir}/build/src" />
        </exec>
    </target>

    <target name="review.hphpa" description="Runs HipHop static analysis on files that needs review" depends="clean, review.files">
        <exec executable="hphpa">
            <arg line="--checkstyle ${basedir}/build/logs/hphpa.xml
                    ${basedir}/build/src" />
        </exec>
    </target>

    <target name="review.phrocco" description="Runs HipHop static analysis on files that needs review" depends="clean, review.files">
        <!-- We need this complicated call as phrocco uses short open tags -->
        <exec executable="/usr/bin/env" dir="${basedir}" os="Linux">
            <arg line="php -d 'short_open_tag=1' /usr/bin/phrocco -i build/src -o build/phrocco" />
        </exec>
        <exec executable="/usr/bin/env" dir="${basedir}" os="Mac OS X">
            <arg line="php -d 'short_open_tag=1' /opt/local/bin/phrocco -i build/src -o build/phrocco" />
        </exec>
    </target>

    <target name="review.phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg line="--log ${basedir}/build/logs
                       --output ${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="review.browse" description="Generates a browsable view of review warnings" depends="setprofile">
        <antcall target="review.phpcb" />
        <exec executable="${review.phpcb.browser}" os="Linux">
            <arg line="${review.build.url}/code-browser/index.html ${review.build.url}/phrocco" />
        </exec>
        <exec executable="open" os="Mac OS X">
            <arg line="-a ${review.phpcb.browser} ${review.build.url}/code-browser/index.html ${review.build.url}/phrocco" />
       </exec>
    </target>

    <target name="bootstrap.review" description="Installs dependencies required by the review target">
        <!-- Upgrade PEAR to latest version -->
        <exec executable="pear">
            <arg line="upgrade pear/pear" />
        </exec>

        <!-- Discover channels -->
        <exec executable="pear">
            <arg line="channel-discover pear.phpunit.de" />
        </exec>
        <exec executable="pear">
            <arg line="channel-discover pear.phpmd.org" />
        </exec>
        <exec executable="pear">
            <arg line="channel-discover pear.pdepend.org" />
        </exec>
        <exec executable="pear">
            <arg line="channel-discover oneblackbear.pearfarm.org" />
        </exec>
        <exec executable="pear">
            <arg line="channel-discover components.ez.no" />
        </exec>

        <!-- Install packages -->
        <exec executable="pear">
            <arg line="install -a phpunit/PHP_CodeBrowser-beta" />
        </exec>
        <exec executable="pear">
            <arg line="install -a phpunit/phpcpd" />
        </exec>
        <exec executable="pear">
            <arg line="install -a phpunit/phploc" />
        </exec>
        <exec executable="pear">
            <arg line="install -a phpunit/hphpa" />
        </exec>
        <exec executable="pear">
            <arg line="install -a phpmd/PHP_PMD" />
        </exec>
        <exec executable="pear">
            <arg line="install -a pdepend/PHP_Depend-beta" />
        </exec>
        <exec executable="pear">
            <arg line="install -a pear/PHP_CodeSniffer" />
        </exec>
        <exec executable="pear">
            <arg line="install -a pear/PhpDocumentor" />
        </exec>
        <exec executable="pear">
            <arg line="install -a oneblackbear/phrocco-0.2.5" />
        </exec>
    </target>
</project>
