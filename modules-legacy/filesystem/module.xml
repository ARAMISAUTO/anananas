<?xml version="1.0" encoding="UTF-8"?>
<project name="filesystem">

    <!-- Mandatory targets -->
    <target name="init" />
	<target name="install" />
	<target name="build" depends="module.filesystem.mkdir,module.filesystem.chmod" />
	<target name="package" />
	<target name="upload" />
	<target name="configure" />

    <!-- Creates directories and symlinks, sets permissions -->
	<target name="module.filesystem.mkdir" description="">
        <script language="javascript">
            <![CDATA[
                // this load lines are needed for Java8 compatibility - with falback
                try {
                    load("nashorn:mozilla_compat.js");
                } catch (e) {}
            	importClass(java.io.File);
                var paths = project.getProperty('filesystem.mkdir');
                if (paths != undefined) {
                    paths = paths.split(',');
                    for (var i=0; i < paths.length; i++) {
    	                taskMkdir = project.createTask('mkdir');
    	                taskMkdir.setDir(new File(paths[i]));
    	                taskMkdir.perform();
                    }
                }
            ]]>
        </script>
	</target>

	<target name="module.filesystem.chmod" description="">
        <propertyselector property="filesystem.modes" delimiter="," match="filesystem.chmod.(\d+)" select="\1" />
        <script language="javascript">
            <![CDATA[
                // this load lines are needed for Java8 compatibility - with falback
                try {
                    load("nashorn:mozilla_compat.js");
                } catch (e) {}
                importClass(java.io.File);
                var modes = project.getProperty('filesystem.modes');
                if (modes != undefined) {
                    modes = modes.split(',');
                    for (var i = 0; i < modes.length; i++) {
                        var mode = modes[i];
                        var paths = project.getProperty('filesystem.chmod.' + mode).split(',');
                        for (var j = 0; j < paths.length; j++) {
                            var path = paths[j];
                            project.setProperty('path.current', path);
                            project.setProperty('mode.current', mode);
                            taskAntCall = project.createTask('antcall');
                            taskAntCall.setTarget('module.filesystem.chmod.file');
                            taskAntCall.perform();
                        }
                    }
                }
            ]]>
        </script>
	</target>

    <target name="module.filesystem.chmod.file">
        <echo>Applying mode ${mode.current} to path ${path.current}</echo>
        <chmod perm="${mode.current}" file="${application.dir.base}/${path.current}" type="both" />
    </target>
</project>
