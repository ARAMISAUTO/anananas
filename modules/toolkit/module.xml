<?xml version="1.0" encoding="UTF-8"?>
<project name="toolkit" default="help">
    <!-- Store toolkit base directory for later use -->
    <dirname property="toolkit.dir.base" file="${ant.file.toolkit}/../.." />

    <!-- Project sources directory -->
    <property name="application.dir.base" value="${basedir}" />
    <property name="application.dir.src" value="${application.dir.base}/src" />

    <!-- Enable ant-contrib (@see http://ant-contrib.sourceforge.net) -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${toolkit.dir.base}/vendor/ant-contrib/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <!-- Guess profile -->
    <exec outputproperty="username" logError="true" executable="whoami" />
    <property environment="env" />
    <condition property="configuration.profile" value="${env.CONFIGURATION_PROFILE}" else="${username}">
        <isset property="env.CONFIGURATION_PROFILE" />
    </condition>

    <!-- Global ABT properties -->
    <property file="${application.dir.base}/toolkit.properties" />

    <!-- Enable configuration module -->
    <property file="${toolkit.dir.base}/modules/configuration/build.properties" />
    <import file="${toolkit.dir.base}/modules/configuration/module.xml" />

    <echo message="Searching for profiles in : ${application.dir.base}/${toolkit.dir.profiles}" />
    <echo message="Using profile : ${configuration.profile}" />

    <!-- Local configuration profile properties -->
    <property file="${application.dir.base}/${toolkit.dir.profiles}/${configuration.profile}/build.properties" />

    <!-- Toolkit default properties -->
    <property file="${toolkit.dir.base}/modules/toolkit/build.properties" />

    <!-- Import helpers -->
    <import file="${toolkit.dir.base}/modules/toolkit/lib.xml" />

    <!-- Make build timestamp available -->
    <tstamp>
        <format property="toolkit.timestamp" pattern="${toolkit.timestamp.format}" />
    </tstamp>

    <!-- Guess project name from project's root directory -->
    <basename file="${application.dir.base}" property="application.name" />

    <!-- Load modules -->
    <for list="${toolkit.modules}" param="module">
        <sequential>
            <echo>Importing module : @{module}</echo>
            <import file="${toolkit.dir.base}/modules/@{module}/module.xml" />
            <property file="${toolkit.dir.base}/modules/@{module}/build.properties" />
            <property name="toolkit.modules.@{module}" value="true" />
        </sequential>
    </for>

    <for list="${toolkit.modules.external}" param="module">
        <sequential>
            <echo>Importing module : @{module}</echo>
            <import file="${application.dir.base}/@{module}/module.xml" />
            <property file="${application.dir.base}/@{module}/build.properties" />
        </sequential>
    </for>

    <!-- Generate list of paths to modules project files -->
    <expandModulesPaths native="${toolkit.modules}" external="${toolkit.modules.external}" />

    <!-- Mandatory targets -->
    <target name="init" description="Sets up project for usage with the toolkit">
        <!-- Create toolkit.properties file -->
        <copy file="${toolkit.dir.base}/templates/toolkit.properties" todir="${basedir}" overwrite="false" />

        <property file="${toolkit.dir.base}/templates/toolkit.properties" />

        <!-- Create sources directory -->
        <mkdir dir="${basedir}/src" />

        <!-- Create dist directory -->
        <mkdir dir="${basedir}/dist" />

        <!-- Create project build.xml file -->
        <copy file="${toolkit.dir.base}/templates/build.xml" todir="${basedir}" overwrite="false" />
        <replace file="${basedir}/build.xml" token="@application.name@" value="${application.name}" />

        <!-- Execute activated modules init -->
        <iterate target="init" basedir="${application.dir.base}" paths="${toolkit.modules.paths}" />
    </target>

    <target name="install" description="Installs project dependencies">
        <iterate target="install" basedir="${application.dir.base}" paths="${toolkit.modules.paths}" />
    </target>

    <target name="build" description="Builds project (ORM classes generation, etc)">
        <iterate target="build" basedir="${application.dir.base}" paths="${toolkit.modules.paths}" />
    </target>

    <target name="package" description="Packages build sources">
        <iterate target="package" basedir="${application.dir.base}" paths="${toolkit.modules.paths}" />
    </target>

    <target name="upload" description="Uploads build artifact">
        <iterate target="upload" basedir="${application.dir.base}" paths="${toolkit.modules.paths}" />
    </target>

    <target name="configure" description="Configures application">
        <iterate target="configure" basedir="${application.dir.base}" paths="${toolkit.modules.paths}" />
    </target>

    <target name="help" description="Displays project's help">
        <echo>Ananas Build Toolkit : Usage</echo>
        <java classname="org.apache.tools.ant.Main">
            <arg value="-buildfile" />
            <arg value="${ant.file}" />
            <arg value="-projecthelp" />
        </java>
        <echo>More documentation can obtained at https://github.com/constructions-incongrues/ananas-build-toolkit</echo>
    </target>
</project>
