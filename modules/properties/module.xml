<?xml version="1.0" encoding="UTF-8"?>
<project name="properties" default="help">
	<!-- Mandatory targets -->
	<target name="bootstrap" depends="update-common" />
	<target name="update" depends="update-common,update-profile" />
	<target name="configure" depends="apply" />
	<target name="build" />
	<target name="review" />
	<target name="migrate" />
	<target name="sync" />

	<!-- Preprocesses -dist files -->
	<target name="apply">
 		<!-- Make build timestamp available -->
 		<tstamp>
	 		<format property="configure.timestamp" pattern="yyyyMMddHHmmss" />
 		</tstamp>

		<property file="${toolkit.basedir}/modules/php/build.properties" />
		<!-- Make all properties available -->
		<tempfile property="all.properties" deleteonexit="true" />
		<echoproperties destfile="${all.properties}" />

		<for list="${properties.dirs}" param="dir">
			<sequential>
				<exec executable="${php.executable}" failonerror="true" dir="${project.dirs.base}">
					<arg value="${toolkit.basedir}/vendor/phpreprocessor/bin/phpreprocessor" />
					<arg value="--command=apply" />
					<arg value="--src=${project.dirs.base}/@{dir}" />
					<arg value="--properties=${toolkit.modules.paths.properties},${project.dirs.base}/etc/common/build.properties,${project.dirs.base}/etc/${profile}/build.properties,${all.properties}" />
				</exec>
			</sequential>
		</for>
	</target>

	<target name="apply-reverse" description="Replaces values by profile directives names in -dist files">
		<property file="${toolkit.basedir}/modules/php/build.properties" />
		<for list="${properties.dirs}" param="dir">
			<sequential>
				<exec executable="${php.executable}" failonerror="true" dir="${project.dirs.base}">
					<arg value="${toolkit.basedir}/vendor/phpreprocessor/bin/phpreprocessor" />
					<arg value="--command=apply" />
					<arg value="--reverse=/^.+\.(url|path)\..+$/" />
		         	<arg value="--src=${project.dirs.base}/@{dir}" />
		         	<arg value="--properties=${toolkit.modules.paths.properties},${project.dirs.base}/etc/common/build.properties,${project.dirs.base}/etc/${profile}/build.properties" />
				</exec>
			</sequential>
		</for>
	</target>

	<!-- Updates common build properties -->
	<target name="update-common">
		<!-- Backup existing build.properties file -->
		<copy file="${project.dirs.base}/etc/${profile}/build.properties" tofile="${project.dirs.base}/etc/${profile}/build.properties.bak" failonerror="false" />

		<!-- Generate common build.properties file from project sources -->
		<property file="${toolkit.basedir}/modules/php/build.properties" />
		<for list="${properties.dirs}" param="dir">
			<sequential>
				<exec executable="${php.executable}" dir="${project.dirs.base}" output="${project.dirs.base}/etc/common/build.properties" logError="true" failonerror="true">
					<arg value="${toolkit.basedir}/vendor/phpreprocessor/bin/phpreprocessor" />
					<arg value="--command=extract" />
					<arg value="--exclude-from=${toolkit.modules.paths.properties}" />
					<arg value="--src=${project.dirs.base}/@{dir}" />
					<arg value="--merge-with=${project.dirs.base}/etc/common/build.properties" />
				</exec>
			</sequential>
		</for>
	</target>

	<!-- Updates profile build properties -->
	<target name="update-profile" depends="create-profile">
		<!-- Create tree if required -->
		<mkdir dir="${project.dirs.base}/etc/${profile}" />
		<touch file="${project.dirs.base}/etc/${profile}/build.properties" />

		<!-- Backup existing build.properties file -->
		<copy file="${project.dirs.base}/etc/${profile}/build.properties" tofile="${project.dirs.base}/etc/${profile}/build.properties.bak" failonerror="false" />

		<!-- Generate profile build.properties file from project sources -->
		<property file="${toolkit.basedir}/modules/php/build.properties" />
		<for list="${properties.dirs}" param="dir">
			<sequential>
				<exec executable="${php.executable}" dir="${project.dirs.base}" output="${project.dirs.base}/etc/${profile}/build.properties" logError="true" failonerror="true">
					<arg value="${toolkit.basedir}/vendor/phpreprocessor/bin/phpreprocessor" />
					<arg value="--command=extract" />
					<arg value="--exclude-from=${toolkit.modules.paths.properties},${project.dirs.base}/etc/common/build.properties" />
					<arg value="--src=${project.dirs.base}/@{dir}" />
					<arg value="--merge-with=${project.dirs.base}/etc/${profile}/build.properties" />
				</exec>
			</sequential>
		</for>
	</target>

	<!-- Creates a new property file for configuration profile -->
	<target name="create-profile" description="Creates an empty build.properties for the user defined by the ABT_USER environment variable or the -Dprofile parameter">
		<!-- Create profile directory and property file if it does not exist -->
		<touch file="${basedir}/etc/${profile}/build.properties" mkdirs="true" verbose="true" />
	</target>
</project>
