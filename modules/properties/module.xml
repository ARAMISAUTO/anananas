<?xml version="1.0" encoding="UTF-8"?>
<project name="properties" default="help">
	<!-- Stages hooks -->
	<target name="configure" depends="properties.apply" />
	<target name="init" />
	<target name="install" />
	<target name="build" />
	<target name="package" depends="properties.dotenv" />
	<target name="upload" />

	<target name="properties.apply" description="Applies profile configuration">
		<!-- Make all properties available -->
		<tempfile property="properties.loaded" deleteonexit="true" />
		<echoproperties destfile="${properties.loaded}" />

		<!-- Fix echoproperties lame escaping -->
		<replace file="${properties.loaded}" token="\:" value=":" />
		<replace file="${properties.loaded}" token="\#" value="#" />
		<replace file="${properties.loaded}" token="\!" value="!" />
		<replace file="${properties.loaded}" token="\=" value="=" />

		<!-- Replace tokens with values in dist files and copy them with the right name -->
		<copy verbose="true" todir="${application.dir.base}" overwrite="true">
			<fileset dir="${application.dir.base}" includes="**/*${properties.suffix}" />
			<mapper type="glob" from="*${properties.suffix}" to="*" />
			<filterset begintoken="${properties.token}" endtoken="${properties.token}" filtersfile="${properties.loaded}" />
		</copy>
	</target>

	<target name="properties.update" description="Searches for property tokens in dist files and adds missing properties to common profile">
		<tempfile property="properties.found.file" deleteonexit="true" />
		<for param="file">
			<path>
				<fileset dir="${application.dir.base}" includes="**/*${properties.suffix}" />
			</path>
			<sequential>
				<var name="properties.found" unset="true" />
				<loadfile srcFile="@{file}" property="properties.found">
					<filterchain>
						<!-- Put tokens on single lines -->
						<tokenfilter>
							<replaceregex pattern="(${properties.token}[^${properties.token}]+${properties.token})" replace="${line.separator}\1${line.separator}" flags="g" />
						</tokenfilter>
						<!-- Remove lines not containing tokens-->
						<linecontainsregexp>
							<regexp pattern="^${properties.token}.+${properties.token}$" />
						</linecontainsregexp>
						<!-- Transform tokens into properties declarations -->
						<tokenfilter>
							<replaceregex pattern="^${properties.token}(.+)${properties.token}$" replace="\1=" />
						</tokenfilter>
					</filterchain>
				</loadfile>
				<echo message="${properties.found}" file="${properties.found.file}" append="true" />
			</sequential>
		</for>

		<!-- Merge found properties with properties already in configuration profile -->
		<property prefix="properties.merge" file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" />
		<property prefix="properties.merge" file="${properties.found.file}" />
		<touch file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" mkdirs="true" />
		<echoproperties destfile="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties">
			<propertyset>
				<propertyref prefix="properties.merge"/>
				<mapper type="glob" from="properties.merge.*" to="*"/>
			</propertyset>
		</echoproperties>

		<!-- Fix echoproperties lame escaping -->
		<replace file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" token="\:" value=":" />
		<replace file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" token="\#" value="#" />
		<replace file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" token="\!" value="!" />
		<replace file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" token="\=" value="=" />

		<!-- Log message -->
		<echo message="Updated configuration profile in ${toolkit.dir.profiles}/${toolkit.profile}/build.properties" />
	</target>

	<target name="properties.dotenv" description="Exports profile properties to environment variables declarations in a file">
		<copy file="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.properties" tofile="${application.dir.base}/${toolkit.dir.profiles}/${toolkit.profile}/build.env" overwrite="true">
			<filterchain>
				<!-- Remove comments generated by echoproperties -->
				<striplinecomments>
					<comment value="#"/>
				</striplinecomments>

				<!-- Make property names shell compatible (capitalize, replace dots by underscores, quote values) -->
				<tokenfilter>
					<scriptfilter language="javascript">
						var parts = self.getToken().split('=');
						self.setToken(parts[0].replace(/\./g, '_').toUpperCase() + '="' + parts[1] + '"');
					</scriptfilter>
				</tokenfilter>
			</filterchain>
		</copy>
	</target>
</project>
